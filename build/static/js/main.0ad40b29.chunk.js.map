{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/ui-slice.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/store.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","uiSlice","createSlice","name","initialState","notification","reducers","setNotification","state","action","status","payload","message","title","uiActions","actions","cartSlice","showing","quantity","items","changed","toggle","decrease","id","existingItem","find","item","key","filter","price","totalPrice","addToCart","newItem","push","replaceCart","cartActions","CartItem","dispatch","useDispatch","itemprice","details","onClick","toFixed","Math","random","Cart","cartItems","useSelector","cart","map","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","Products","products","Notification","specialClasses","styles","error","success","cssClasses","isInitial","App","ui","useEffect","a","gettingData","fetch","response","ok","Error","json","data","cartData","sendingData","method","body","JSON","stringify","sendDataToCart","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ad40b29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__2VRgH\",\"details\":\"CartItem_details__3NEdI\",\"quantity\":\"CartItem_quantity__zFueR\",\"price\":\"CartItem_price__2tU6i\",\"itemprice\":\"CartItem_itemprice__3foxN\",\"actions\":\"CartItem_actions__yKZr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__Fuwjr\",\"price\":\"ProductItem_price__2HYYn\",\"actions\":\"ProductItem_actions__3cG6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2zCOr\",\"error\":\"Notification_error__2CD3A\",\"success\":\"Notification_success__bDC3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__215es\",\"badge\":\"CartButton_badge__3XseR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1ve8W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2g-eO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__Avze_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__2ccJM\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { notification: null },\r\n  reducers: {\r\n    setNotification(state, action) {\r\n      state.notification = {\r\n        status: action.payload.status,\r\n        message: action.payload.message,\r\n        title: action.payload.title,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiActions = uiSlice.actions;\r\nexport default uiSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartInitialState = {\r\n  showing: false,\r\n  quantity: 0,\r\n  items: [],\r\n  changed: false,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: cartInitialState,\r\n  reducers: {\r\n    toggle(state) {\r\n      state.showing = !state.showing;\r\n    },\r\n    decrease(state, action) {\r\n      state.changed = true;\r\n      const id = action.payload.id;\r\n      const existingItem = state.items.find((item) => {\r\n        return item.key === id;\r\n      });\r\n      state.quantity = state.quantity - 1;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.key !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.price = existingItem.price - existingItem.totalPrice;\r\n      }\r\n    },\r\n    addToCart(state, action) {\r\n      state.changed = true;\r\n      state.quantity = state.quantity + 1;\r\n\r\n      const newItem = action.payload;\r\n\r\n      const existingItem = state.items.find(\r\n        (item) => item.name === action.payload.name\r\n      );\r\n      if (existingItem) {\r\n        existingItem.quantity = existingItem.quantity + 1;\r\n        existingItem.price = existingItem.price + newItem.price;\r\n      } else {\r\n        state.items.push({\r\n          name: newItem.name,\r\n          price: newItem.price,\r\n          totalPrice: newItem.totalPrice,\r\n          quantity: newItem.quantity,\r\n          key: newItem.key,\r\n        });\r\n      }\r\n    },\r\n    replaceCart(state, action) {\r\n      state.quantity = action.payload.quantity;\r\n      state.items = action.payload.items;\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendDataToCart = (cart) => {\r\n  return async (dispatch) => {\r\n    // waiting for data to send\r\n    dispatch(\r\n      uiActions.setNotification({\r\n        status: \"pending\",\r\n        message: \"data is sending\",\r\n      })\r\n    );\r\n\r\n    // sending the PUT request\r\n    const sendingData = async () => {\r\n      const response = await fetch(\r\n        \"https://advanced-redux-e87ae-default-rtdb.firebaseio.com/cart.json\",\r\n        { method: \"PUT\", body: JSON.stringify(cart) }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Data not sent\");\r\n      }\r\n    };\r\n\r\n    // PUT request is successful\r\n    try {\r\n      await sendingData();\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"success\",\r\n          message: \"data sent successfully\",\r\n          title: \"Sent\",\r\n        })\r\n      );\r\n      //  PUT request is not successful\r\n    } catch (err) {\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, totalPrice, price } = props.item;\n\n  const decreaseButtonHandler = () => {\n    dispatch(cartActions.decrease({ id: props.item.key, price }));\n  };\n  const increaseButtonHandler = () => {\n    dispatch(\n      cartActions.addToCart({\n        name: title,\n        price: +totalPrice,\n        quantity: 1,\n        totalPrice: price.toFixed(2),\n        key: Math.random(),\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${price}{\" \"}\n          <span className={classes.itemprice}>(${totalPrice}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={decreaseButtonHandler}>-</button>\n          <button onClick={increaseButtonHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport { useSelector } from \"react-redux\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => {\n          return (\n            <CartItem\n              key={item.key}\n              item={{\n                key: item.key,\n                title: item.name,\n                quantity: item.quantity,\n                totalPrice: item.totalPrice,\n                price: item.price,\n              }}\n            />\n          );\n        })}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import classes from \"./CartButton.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartButton = (props) => {\n  const cartQuantity = useSelector((state) => state.cart.quantity);\n  const dispatch = useDispatch();\n\n  const cartButtonHandler = () => {\n    dispatch(cartActions.toggle());\n  };\n  return (\n    <button className={classes.button} onClick={cartButtonHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const { title, price, description } = props;\n\n  const dispatch = useDispatch();\n  const addToCartHandler = () => {\n    dispatch(\n      cartActions.addToCart({\n        name: title,\n        price: price,\n        description: description,\n        quantity: 1,\n        totalPrice: price.toFixed(2),\n        key: Math.random(),\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        <ProductItem\n          title=\"Test\"\n          price={6}\n          description=\"This is a first product - amazing!\"\n        />\n        <ProductItem\n          title=\"Second test\"\n          price={4}\n          description=\"This is the second product - awesome!\"\n        />\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import styles from \"./Notification.module.css\";\r\n\r\nconst Notification = (props) => {\r\n  let specialClasses = \"\";\r\n\r\n  if (props.status === \"error\") {\r\n    specialClasses = styles.error;\r\n  }\r\n  if (props.status === \"success\") {\r\n    specialClasses = styles.success;\r\n  }\r\n\r\n  const cssClasses = `${styles.notification} ${specialClasses}`;\r\n\r\n  return (\r\n    <section className={cssClasses}>\r\n      <h2>{props.title}</h2>\r\n      <p>{props.message}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { Fragment, useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { sendDataToCart, getCartData } from \"./store/cart-actions\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showing = useSelector((state) => state.cart.showing);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n  const changed = useSelector((state) => state.cart.changed);\n\n  // load cart from firebase\n  useEffect(() => {\n    dispatch(getCartData());\n  }, [dispatch]);\n\n  // send new cart data to firebase\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    if (changed) {\n      dispatch(sendDataToCart(cart));\n    }\n  }, [cart, dispatch, changed]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          message={notification.message}\n          title={notification.title}\n        />\n      )}\n      <Layout>\n        {showing && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport const sendDataToCart = (cart) => {\r\n  return async (dispatch) => {\r\n    // waiting for data to send\r\n    dispatch(\r\n      uiActions.setNotification({\r\n        status: \"pending\",\r\n        message: \"data is sending\",\r\n      })\r\n    );\r\n\r\n    // sending the PUT request\r\n    const sendingData = async () => {\r\n      const response = await fetch(\r\n        \"https://advanced-redux-e87ae-default-rtdb.firebaseio.com/cart.json\",\r\n        { method: \"PUT\", body: JSON.stringify(cart) }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Data not sent\");\r\n      }\r\n    };\r\n\r\n    // PUT request is successful\r\n    try {\r\n      await sendingData();\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"success\",\r\n          message: \"data sent successfully\",\r\n          title: \"Sent\",\r\n        })\r\n      );\r\n      //  PUT request is not successful\r\n    } catch (err) {\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport const getCartData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.setNotification({\r\n        status: \"pending\",\r\n        message: \"data is being fetched\",\r\n      })\r\n    );\r\n\r\n    const gettingData = async () => {\r\n      const response = await fetch(\r\n        \"https://advanced-redux-e87ae-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Data not fetched\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const cartData = await gettingData();\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"success\",\r\n          message: \"data fetched successfully\",\r\n        })\r\n      );\r\n\r\n      dispatch(\r\n        cartActions.replaceCart({\r\n          items: cartData.items || [],\r\n          quantity: cartData.quantity || 0,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      dispatch(\r\n        uiActions.setNotification({\r\n          status: \"error\",\r\n          message: \"data was not fetched\",\r\n          title: \"error\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport uiSlice from \"./ui-slice\";\r\nimport cartSlice from \"./cart-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    cart: cartSlice.reducer,\r\n    ui: uiSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}